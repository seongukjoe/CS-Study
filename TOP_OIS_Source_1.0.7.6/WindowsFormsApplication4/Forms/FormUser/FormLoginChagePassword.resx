<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Save.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XrwA/wM6UqSUJQbciAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btn_Exit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>